#!/bin/sh
#
# A tool for converting Gogh schemes for tty-colorscheme.
# TTY background is color1 and foreground is color8.
# color9 and color16 are the same but for reversed colors.

gogh_ver=254
gogh_link="https://github.com/Gogh-Co/Gogh/archive/refs/tags/v$gogh_ver.tar.gz"

curl -LO $gogh_link
tar xvf v$gogh_ver.tar.gz
mkdir -v converted-schemes

for scheme_file in Gogh-"$gogh_ver"/installs/*.sh; do
	get_colors() {
		awk -F '#' '
		/BACKGROUND_COLOR/ { printf "color1=%s\n", substr($2, 1, 6) }
			/COLOR_02/ { printf "color2=%s\n", substr($2, 1, 6) }
			/COLOR_03/ { printf "color3=%s\n", substr($2, 1, 6) }
			/COLOR_04/ { printf "color4=%s\n", substr($2, 1, 6) }
			/COLOR_05/ { printf "color5=%s\n", substr($2, 1, 6) }
			/COLOR_06/ { printf "color6=%s\n", substr($2, 1, 6) }
			/COLOR_07/ { printf "color7=%s\n", substr($2, 1, 6) }
		/FOREGROUND_COLOR/ { printf "color8=%s\n", substr($2, 1, 6) }
		/BACKGROUND_COLOR/ { printf "color9=%s\n", substr($2, 1, 6) }
			/COLOR_10/ { printf "color10=%s\n", substr($2, 1, 6) }
			/COLOR_11/ { printf "color11=%s\n", substr($2, 1, 6) }
			/COLOR_12/ { printf "color12=%s\n", substr($2, 1, 6) }
			/COLOR_13/ { printf "color13=%s\n", substr($2, 1, 6) }
			/COLOR_14/ { printf "color14=%s\n", substr($2, 1, 6) }
			/COLOR_15/ { printf "color15=%s\n", substr($2, 1, 6) }
		/FOREGROUND_COLOR/ { printf "color16=%s\n", substr($2, 1, 6) }
		' "$scheme_file" | sort -V
	}
	printf 'Converting %s\n' "$(basename "$scheme_file" .sh)"
	get_colors > converted-schemes/"$(basename "$scheme_file" .sh)"
done

# c64 dirs are completely unreadable
printf 'Fixing c64\n'
sed -i 's|color5=40318D|color5=7869C4|' converted-schemes/c64
sed -i 's|color13=40318D|color13=7869C4|' converted-schemes/c64

rm -vf ../colorschemes/gogh/*
cp -vf converted-schemes/* ../colorschemes/gogh

printf '\nCompleted\n\n'
printf 'Duplicate colorschemes:\n'

# Checking for duplicates and removing them
./find-dups
./find-dups | awk 'NR % 2 == 1 {print $2}' | while read -r line; do rm -vf "$line"; done
