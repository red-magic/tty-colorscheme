#!/bin/sh

colorschemes_dir=/etc/tty-colorscheme/colorschemes

print_help() {
	printf 'Usage: %s [-lcrsh | colorscheme]\n' "$(basename "$0")"
	printf '  -l    list colorschemes\n'
	printf '  -c    print current palette\n'
	printf '  -r    set a random colorscheme\n'
	printf '  -s    shift through colorschemes\n'
	printf '  -h    print help\n'
}

if [ $# -eq 0 ]; then
	PRINT_HELP=1
fi

while getopts :lcrsh OPT; do
	case $OPT in
		l) PRINT_SCHEMES=1;;
		c) PRINT_CURRENT_PALETTE=1;;
		r) SET_RANDOM_COLORSCHEME=1;;
		s) SHIFT_THROUGH_COLORSCHEMES=1;;
		h) PRINT_HELP=1;;
		*) printf 'Invalid option -%s\n' "$OPTARG" && print_help && exit 1;;
	esac
done

shift $((OPTIND-1))

if [ -n "$PRINT_SCHEMES" ]; then
	for scheme_file in "$colorschemes_dir"/*; do
		basename "$scheme_file"
	done
fi

if [ -n "$PRINT_CURRENT_PALETTE" ]; then
	cnt=0
	for bkgrnd in $(seq 40 47); do
		printf '%b' "\033[${bkgrnd}m"
		for bold in 22 1; do
			printf '%b' "\033[${bold}m"
			for frgrnd in $(seq 30 37); do
				cntprt=$cnt
				while [ ${#cntprt} -lt 3 ]; do
					cntprt=" $cntprt"
				done
				printf '%b' "\033[${frgrnd}m $cntprt"
				cnt=$((cnt+1))
			done
		done
		printf '%b\n' '\033[0m'
	done
fi

if [ -n "$SHIFT_THROUGH_COLORSCHEMES" ]; then
	set -- $($(basename "$0") -l)
	max_ind=$#
	i=1
	while true; do
		colorscheme=$(eval "printf \"\${${i}}"\")
		$(basename "$0") "$colorscheme"
		printf "\nPress Enter to go to the next colorscheme"
		printf "\nPress b then Enter to go one colorscheme back\n"
		read -r char
		case $char in
			b) [ $i -gt 1 ] && i=$((i-1));;
			*) [ $i -lt "$max_ind" ] && i=$((i+1));;
		esac
	done
fi

if [ -n "$PRINT_HELP" ]; then
	print_help
fi

if [ "$OPTIND" -eq 1 ] && [ -n "$1" ] || [ -n "$SET_RANDOM_COLORSCHEME" ]; then
	if [ -n "$SET_RANDOM_COLORSCHEME" ]; then
		colorscheme=$(basename "$(find "$colorschemes_dir" -type f | shuf -n 1)")
	else
		colorscheme=$1
		if [ ! -f "$colorschemes_dir/$colorscheme" ]; then
			printf 'Invalid colorscheme\n'
			exit 1
		fi
	fi
	while IFS= read -r line || [ -n "$line" ]; do
		eval "$line"
	done < "$colorschemes_dir/$colorscheme"
	set_tty_colors() {
		printf '\033]P0%s' "${color1:?}"  # Black (Background)
		printf '\033]P1%s' "${color2:?}"  # Red
		printf '\033]P2%s' "${color3:?}"  # Green
		printf '\033]P3%s' "${color4:?}"  # Yellow
		printf '\033]P4%s' "${color5:?}"  # Blue
		printf '\033]P5%s' "${color6:?}"  # Magenta
		printf '\033]P6%s' "${color7:?}"  # Cyan
		printf '\033]P7%s' "${color8:?}"  # White (Foreground)
		printf '\033]P8%s' "${color9:?}"  # Black
		printf '\033]P9%s' "${color10:?}" # Red
		printf '\033]PA%s' "${color11:?}" # Green
		printf '\033]PB%s' "${color12:?}" # Yellow
		printf '\033]PC%s' "${color13:?}" # Blue
		printf '\033]PD%s' "${color14:?}" # Magenta
		printf '\033]PE%s' "${color15:?}" # Cyan
		printf '\033]PF%s' "${color16:?}" # White
	}
	for i in $(seq 1 6); do
		set_tty_colors > /dev/tty"$i"
	done > /dev/null 2>&1
	if [ "$TERM" = linux ]; then
		clear
		$(basename "$0") -c
	fi
	printf 'Setting %s colorscheme\n' "$colorscheme"
fi
