#!/bin/bash

colorschemes_dir=/etc/tty-colorscheme/colorschemes

print_help() {
	echo "Usage: $(basename "$0") [-lcrsh | colorscheme]"
	echo "  -l    list colorschemes"
	echo "  -c    print current palette"
	echo "  -r    set a random colorscheme"
	echo "  -s    shift through colorschemes"
	echo "  -h    print help"
}

if [[ $# -eq 0 ]]; then
	PRINT_HELP=1
fi

while getopts :lcrsh OPT; do
	case $OPT in
		l) PRINT_SCHEMES=1;;
		c) PRINT_CURRENT_PALETTE=1;;
		r) SET_RANDOM_COLORSCHEME=1;;
		s) SHIFT_THROUGH_COLORSCHEMES=1;;
		h) PRINT_HELP=1;;
		*) echo "Invalid option -$OPTARG" && print_help && exit 1;;
	esac
done

shift $((OPTIND-1))

if [[ -n $PRINT_SCHEMES ]]; then
	for scheme_file in "$colorschemes_dir"/*; do
		basename "$scheme_file"
	done
fi

if [[ -n $PRINT_CURRENT_PALETTE ]]; then
	cnt=0
	for bkgrnd in {40..47}; do
		echo -en "\e[${bkgrnd}m"
		for bold in 22 1; do
			echo -en "\e[${bold}m"
			for frgrnd in {30..37}; do
				cntprt=$cnt
				while [[ ${#cntprt} -lt 3 ]]; do
					cntprt=" $cntprt"
				done
				echo -en "\e[${frgrnd}m $cntprt"
				((cnt++))
			done
		done
		echo -en "\e[0m\n"
	done
fi

if [[ -n $SHIFT_THROUGH_COLORSCHEMES ]]; then
	mapfile -t colorschemes_list < <($(basename "$0") -l)
	max_ind=$((${#colorschemes_list[@]}-1))
	i=0
	while true; do
		colorscheme="${colorschemes_list[$i]}"
		$(basename "$0") "$colorscheme"
		echo "Use j and k keys to shift through colorschemes"
		read -rsn1
		case $REPLY in
			j) [[ $i -lt $max_ind ]] && ((++i));;
			k) [[ $i -gt 0 ]] && ((--i));;
			*) exit 0;;
		esac
	done
fi

if [[ -n $PRINT_HELP ]]; then
	print_help
fi

if [[ $OPTIND -eq 1 && -n $1 || -n $SET_RANDOM_COLORSCHEME ]]; then
	if [[ -n $SET_RANDOM_COLORSCHEME ]]; then
		colorscheme=$(basename "$(find "$colorschemes_dir" -type f | shuf -n 1)")
	else
		colorscheme=$1
		if [[ ! -f $colorschemes_dir/$colorscheme ]]; then
			echo "Invalid colorscheme"
			exit 1
		fi
	fi
	while IFS= read -r line || [[ -n "$line" ]]; do
		eval "$line"
	done < "$colorschemes_dir/$colorscheme"
	set_tty_colors() {
		echo -e "\e]P0${color1:?}"  # Black (Background)
		echo -e "\e]P1${color2:?}"  # Red
		echo -e "\e]P2${color3:?}"  # Green
		echo -e "\e]P3${color4:?}"  # Yellow
		echo -e "\e]P4${color5:?}"  # Blue
		echo -e "\e]P5${color6:?}"  # Magenta
		echo -e "\e]P6${color7:?}"  # Cyan
		echo -e "\e]P7${color8:?}"  # White (Foreground)
		echo -e "\e]P8${color9:?}"  # Black
		echo -e "\e]P9${color10:?}" # Red
		echo -e "\e]PA${color11:?}" # Green
		echo -e "\e]PB${color12:?}" # Yellow
		echo -e "\e]PC${color13:?}" # Blue
		echo -e "\e]PD${color14:?}" # Magenta
		echo -e "\e]PE${color15:?}" # Cyan
		echo -e "\e]PF${color16:?}" # White
	}
	for i in {1..6}; do
		set_tty_colors > /dev/tty"$i"
	done
	if [[ $TERM = linux ]]; then
		clear
		$(basename "$0") -c
	fi
	echo "Setting $colorscheme colorscheme"
fi
